{_ Preferences _}
{set reportAtmoPressure to 0}   {_ Set to 1 if you want to hear about the atmospheric pressure. _}
{set reportAtmoTempScale to 0}  {_ Set to 0 if you want to hear about temperatures in Kelvin _}
                                {_ Set to 1 if you want to hear about temperatures in Celsius _}
                                {_ Set to 2 if you want to hear about temperatures in Fahrenheit _}
                                {_ Set to 3 if you don't want to hear about the temperature of the body _}

{_ Define functions for converting temperature scales _}
{set ToCelsius(kelvin) to: {round(kelvin - 273)}}
{set ToFahrenheit(kelvin) to: {round((kelvin-273)*9/5 + 32)}}
{set TempCalc(kelvin) to: 
    {if reportAtmoTempScale = 0: {round(kelvin)}}
    {if reportAtmoTempScale = 1: {ToCelsius(kelvin)}}
    {if reportAtmoTempScale = 2: {ToFahrenheit(kelvin)}}
}

{_ Name our temperature scale _}
{if reportAtmoTempScale = 0: {set tempscale to: Kelvin}}
{if reportAtmoTempScale = 1: {set tempscale to: degrees Celsius}}
{if reportAtmoTempScale = 2: {set tempscale to: degrees Fahrenheit}}

{_ Fetch from context }
{set reportbody to BodyDetails(state.eddi_context_body_name, state.eddi_context_body_system)}
{if !reportbody: 
    {set reportbody to BodyDetails(state.eddi_context_body_name)}
}

{if !reportbody.name || reportbody.name = "":
    Não {OneOf("tenho certeza","estou certo")} sobre qual corpo você está {OneOf("perguntando","se referindo")}.

|else:

    {if find(reportbody.planettype, "giant") >= 0:
        {if find(reportbody.planettype, "Class") >= 0: 
            {set sudarsky to Occasionally(3, "Sud-dar-ski")}
        }
        {set planetdesc to OneOf("{sudarsky} Gigantes gasosos como este têm", "Este gigante gasoso {sudarsky} tem")}
        {if find(reportbody.planettype, "Class V") >= 0:
            {planetdesc} 
            {if reportAtmoTempScale < 3: 
                {set tempmin to: {TempCalc(1373)}}
                temperaturas acima de {Humanise(tempmin)} {tempscale}, {OneOf("e", "com", "formando")}
            }
            uma densa camada de nuvens de {OneOf("ferro e silicatos vaporizados", "vapores de ferro e silicato")}.
        |elif find(reportbody.planettype, "Class IV") >= 0:
            {planetdesc} 
            {if reportAtmoTempScale < 3: 
                {set tempmin to: {TempCalc(354)}}
                {set tempmax to: {TempCalc(903)}}
                temperaturas {OneOf("que variam", "variando")} entre {Humanise(tempmin)} e {Humanise(tempmax)} {tempscale}, {OneOf("e", "com", "formando")}
            }
            uma densa camada de núvens de {OneOf("vapores de metal alcalino", "metais alcalinos vaporizados")}.   
        |elif find(reportbody.planettype, "Class III") >= 0:
            {planetdesc} 
            {if reportAtmoTempScale < 3: 
                {set tempmin to: {TempCalc(251)}}
                {set tempmax to: {TempCalc(353)}}
                temperaturas da superfície {OneOf("que variam", "variando")} entre {Humanise(tempmin)} e {Humanise(tempmax)} {tempscale},
            }
            uma temperatura em que {OneOf("nenhum elemento gasoso formará quaisquer nuvens", "produtos químicos adequados não estão presentes na atmosféra para formar uma camada de nuvem sustentável", "a atmosféra não sustenta uma camada de núvens persistente")}.
        |elif find(reportbody.planettype, "Class II") >= 0:
            {planetdesc} 
            {if reportAtmoTempScale < 3: 
                {set tempmin to: {TempCalc(154)}}
                {set tempmax to: {TempCalc(250)}}
                temperaturas na superfície {OneOf("que variam", "variando")} entre {Humanise(tempmin)} e {Humanise(tempmax)} {tempscale}, {OneOf("e", "com", "formando")}
            }
            uma densa camada de núvens de vapor de água.  
        |elif find(reportbody.planettype, "Class I") >= 0:
            {planetdesc} 
            {if reportAtmoTempScale < 3: 
                {set tempmin to: {TempCalc(153)}}
                {set tempmax to: {TempCalc(83)}}
                temperaturas na superfície de {Humanise(tempmax)} {tempscale} {Occasionally(2, OneOf(", ou menos,", ", quando muito,"))} {OneOf("e", "com", "formando")}
            }
            uma densa camada de vapor de amônia.  
        }

    |elif reportbody.atmosphere = "No atmosphere" || !reportbody.atmosphere:
        {Occasionally(4, OneOf("Não há atmosféra.", "É desprovido de qualquer atmosféra.", "Os anos o deixaram sem qualquer atmosféra."))}
        {if reportbody.temperature && reportAtmoTempScale < 3:
            A temperatura média na superfície é de 
            {TempCalc(reportbody.temperature)} {tempscale}.
        }

    |elif reportbody.pressure: 
        {if reportbody.pressure < 0.1:
            {set pressdesc to OneOf("com traços de gás", "super fina")}
        |elif reportbody.pressure < 0.25:
            {set pressdesc to "muito fina"}
        |elif reportbody.pressure < 0.5:
            {set pressdesc to "fina"}
        |elif reportbody.pressure < 2:
            {set pressdesc to ""}
        |elif reportbody.pressure < 10:
            {set pressdesc to "grossa"}
        |elif reportbody.pressure < 50:
            {set pressdesc to OneOf("densa", "muito grossa")}
        |elif reportbody.pressure < 100:
            {set pressdesc to OneOf("muito densa", "super grossa")}
        |elif reportbody.pressure >= 100:
            {set pressdesc to OneOf("esmagadôra", "super densa")}
        }
        {if find(reportbody.atmosphere, "-rich") >= 0:
            {set element to token(reportbody.atmosphere, "rico em", "")}
            {set desc to OneOf("É uma", "Há uma", "Sensores detectam uma")}
            {OneOf("atmosféra {desc} {pressdesc} {reportbody.atmospherecompositions[0].name}", "A atmosféra {pressdesc} é {reportbody.atmospherecompositions[0].name}")}
            {if reportbody.atmospherecompositions[0].name != element:
                , {OneOf("que é","e")} rica em {element}
            }
        |elif find(reportbody.atmosphere, "vapour") >= 0:
            A atmosféra {pressdesc} {OneOf("é composta de {reportbody.atmosphere}s", "é rica em {reportbody.atmosphere}s", "contém altos níveis de {reportbody.atmosphere}s")}
        |elif reportbody.planetClass.invariantName = "Earth-like world":
            A atmosfera é similar a da Terra, 
        |else:
            {set mostly to OneOf("primariamente", "principalmente", "em boa parte")}
            {OneOf("A atmosféra {pressdesc} é composta {mostly} de", "O mais predominante na atmosféra {pressdesc} é")}
            {reportbody.atmosphere}
        }

        {_ Atmospheric Composition _}
        { if reportAtmoPressure > 0:
            com uma pressão na superfície de {Humanise(reportbody.pressure)} atmosferas da Terra, 
        }
        {if reportbody.temperature && reportAtmoTempScale < 3:
            {set temp to: {TempCalc(reportbody.temperature)}}
            {if find(temp, "-") >= 0: 
                {set temp to cat(temp*-1, tempscale, "below zero")}
            |else:
                {set temp to cat(temp, tempscale)}
            }
            com uma temperatura média na superfície de {temp}
        }.
    }
}